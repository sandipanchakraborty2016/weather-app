version: "1"

services:
  mongodb:
    image: 'mongo:latest'
    environment:
      - 'MONGO_INITDB_DATABASE=weatherdb'
      - 'MONGO_INITDB_ROOT_PASSWORD=secret'
      - 'MONGO_INITDB_ROOT_USERNAME=root'
    ports:
      - '27017'


#services:
#  apisix-dashboard:
#    image: apache/apisix-dashboard:latest
#    restart: always
#    volumes:
#      - ./dashboard_conf/conf.yaml:/usr/local/apisix-dashboard/conf/conf.yaml
#    ports:
#      - "9000:9000"
#    networks:
#      apisix:
#
#  apisix:
#    image: apache/apisix:latest
#    restart: always
#    volumes:
#      - ./apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
#    depends_on:
#      - etcd
#    ##network_mode: host
#    ports:
#      - "9180:9180/tcp"
#      - "9080:9080/tcp"
#      - "9091:9091/tcp"
#      - "9443:9443/tcp"
#      - "9092:9092/tcp"
#    networks:
#      apisix:
#
#  etcd:
#    image: bitnami/etcd:latest
#    restart: always
#    volumes:
#      - etcd_data:/bitnami/etcd
#    environment:
#      ETCD_ENABLE_V2: "true"
#      ALLOW_NONE_AUTHENTICATION: "yes"
#      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd:23799"
#      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:23799"
#    ports:
#      - "23799:23799/tcp"
#    networks:
#      apisix:
#
#  web1:
#    image: nginx:latest
#    restart: always
#    volumes:
#      - ./upstream/web1.conf:/etc/nginx/nginx.conf
#    ports:
#      - "9081:80/tcp"
#    environment:
#      - NGINX_PORT=80
#    networks:
#      apisix:
#
#  web2:
#    image: nginx:latest
#    restart: always
#    volumes:
#      - ./upstream/web2.conf:/etc/nginx/nginx.conf
#    ports:
#      - "9082:80/tcp"
#    environment:
#      - NGINX_PORT=80
#    networks:
#      apisix:
#
#  prometheus:
#    image: prom/prometheus:latest
#    restart: always
#    volumes:
#      - ./prometheus_conf/prometheus.yml:/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"
#    networks:
#      apisix:
#
#  grafana:
#    image: grafana/grafana:latest
#
#    restart: always
#    ports:
#      - "3000:3000"
#    volumes:
#      - "./grafana_conf/provisioning:/etc/grafana/provisioning"
#      - "./grafana_conf/dashboards:/var/lib/grafana/dashboards"
#      - "./grafana_conf/config/grafana.ini:/etc/grafana/grafana.ini"
#    networks:
#      apisix:
#
#networks:
#  apisix:
#    driver: bridge
#
#volumes:
#  etcd_data:
#    driver: local